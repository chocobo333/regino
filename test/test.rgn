
![link: "arith.ll"]
![link: "io.ll"]
![link: "int.ll"]
![link: "string.ll"]


type
    bool = typeof(false)
    int = typeof(0)
    float = typeof(0.0)
    string = typeof("")

func f(a: int) -> int:
    a
func f(a: float) -> float:
    a
func f(a: bool) -> bool:
    a
func `add@int32/int32int32`(a: int, b: int) -> int ![importll]
func `sub@int32/int32int32`(a: int, b: int) -> int ![importll]
func `eq@bool/int32int32`(a: int, b: int) -> bool ![importll]
func `+`(a: int, b: int) -> int:
    `add@int32/int32int32`(a, b)
func `-`(a: int, b: int) -> int:
    `sub@int32/int32int32`(a, b)
func `==`(a: int, b: int) -> bool:
    `eq@bool/int32int32`(a, b)

func `tos@string/i32`(a: int) -> string ![importll]
func `$`(a: int) -> string ![subtype]:
    `tos@string/i32`(a)


func toInt(a: bool) -> int ![subtype]:
    if a:
        1
    else:
        0
func `$`(a: bool) -> string ![subtype]:
    if a:
        "true"
    else:
        "false"
func echo(a: string) ![importll]
func len(a: string) -> int ![importll]

func fib(n: int) -> int:
    if n == 0:
        1
    elif n == 1:
        1
    else:
        fib(n-1) + fib(n-2)
let a: bool = true
echo a
let a = 3
echo 3
0