
![link: "arith.ll"]
![link: "io.ll"]
![link: "int.ll"]
![link: "string.ll"]

type
    bool = typeof(false)
    int = typeof(0)

func `add@int32/int32int32`(a: int, b: int) -> int ![importll]
func `sub@int32/int32int32`(a: int, b: int) -> int ![importll]
func `eq@bool/int32int32`(a: int, b: int) -> bool ![importll]
func `+`(a: int, b: int) -> int:
    ## adds two integer and outputs its result
    `add@int32/int32int32`(a, b)
func `-`(a: int, b: int) -> int:
    `sub@int32/int32int32`(a, b)
func `==`(a: int, b: int) -> bool:
    `eq@bool/int32int32`(a, b)

func fib(n: int) -> int:
    ## calculates `n`th Fibonacci number
    if n == 0:
        1
    elif n == 1:
        1
    else:
        fib(n-1) + fib(n-2)

fib(10)