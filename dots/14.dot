digraph order {
  graph [
    size = "30,10"
    ];
  node [
    shape = none
    ];
  edge [
    dir = back
    ];
  "(string) -> ()"
  "(()) -> ()"
  "string"
  "('o(ptr int, ptr int^ptr ~'u(Bottom, string)), int) -> ~'u(Bottom, string)"
  "((), ()) -> ~'u(Bottom, string)"
  "(ptr ~'u(Bottom, string), int) -> ~'u(Bottom, string)"
  "'u(Bottom, string)"
  "ptr ~'u(Bottom, string)"
  "(ptr int, int, int) -> ()"
  "()"
  "'o(ptr int, ptr int^ptr ~'u(Bottom, string))"
  "ptr int"
  "((), (), ()) -> ()"
  "(()) -> string"
  "(~'u(Bottom, string)) -> ()"
  "(int) -> string"
  "('o(ptr int, ptr int^ptr ~'u(Bottom, string)), int, int) -> ()"
  "int"
  "(string) -> ()" -> "(()) -> ()"
  "string" -> "'u(Bottom, string)"
  "('o(ptr int, ptr int^ptr ~'u(Bottom, string)), int) -> ~'u(Bottom, string)" -> "(ptr ~'u(Bottom, string), int) -> ~'u(Bottom, string)"
  "ptr int" -> "'o(ptr int, ptr int^ptr ~'u(Bottom, string))"
  "(~'u(Bottom, string)) -> ()" -> "(string) -> ()"
  "(ptr ~'u(Bottom, string), int) -> ~'u(Bottom, string)" -> "((), ()) -> ~'u(Bottom, string)"
  "(int) -> string" -> "(()) -> string"
  "('o(ptr int, ptr int^ptr ~'u(Bottom, string)), int, int) -> ()" -> "(ptr int, int, int) -> ()"
  "ptr ~'u(Bottom, string)" -> "'o(ptr int, ptr int^ptr ~'u(Bottom, string))"
  "(ptr int, int, int) -> ()" -> "((), (), ()) -> ()"
  "()" -> "string"
  "()" -> "ptr ~'u(Bottom, string)"
  "()" -> "ptr int"
  "()" -> "int"
  "'o(ptr int, ptr int^ptr ~'u(Bottom, string))" -> "ptr int"
}